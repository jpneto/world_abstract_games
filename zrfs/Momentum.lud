
// ***********************************************

// #1 = steps away from last To location that the target marble to be moved is
// #2 = Compass direction 
(define "PushAMarble"
    // If marble is not about to be pushed off the board.
    (if (!= (last To) ((ahead (last To) steps:(+ 1 #1) #2)))
        // then push the marble one step on the board.
        (fromTo (from (ahead (last To) steps:#1 #2)) (to ((ahead (last To) steps:(+ 1 #1) #2))))
        // else push the marble off the board and adjust the score for the owning player.
        (and {
            (remove ((ahead (last To) steps:#1 #2)))
            // (note ((ahead (last To) steps:#1 #2)))
            // (note (who at:((ahead (last To) steps:#1 #2))))
            (if (= 1 (who at:((ahead (last To) steps:#1 #2))) )
                (addScore P1 -1)
                (if (= 2 (who at:((ahead (last To) steps:#1 #2))) )
                    (addScore P2 -1)
                    // If a third player is playing, adjust his/her score too.
                    <Board:adjP3score>
                )
            )
        }
        )
    )
)

// #1 = Compass direction
(define "FindLastMarbleAndPushIt"
    // Search for an empty space or off the board at the end of a line of arbitrary marbles.
    (if (not (or (is Empty (ahead (last To) steps:1 #1)) (= (last To) (ahead (last To) steps:1 #1))))
        (if (not (or (is Empty (ahead (last To) steps:2 #1)) (= (last To) (ahead (last To) steps:2 #1))))
            (if (not (or (is Empty (ahead (last To) steps:3 #1)) (= (last To) (ahead (last To) steps:3 #1))))
                (if (not (or (is Empty (ahead (last To) steps:4 #1)) (= (last To) (ahead (last To) steps:4 #1))))
                    (if (not (or (is Empty (ahead (last To) steps:5 #1)) (= (last To) (ahead (last To) steps:5 #1))))
                        (if (not (or (is Empty (ahead (last To) steps:6 #1)) (= (last To) (ahead (last To) steps:6 #1))))
                            (if (not (or (is Empty (ahead (last To) steps:7 #1)) (= (last To) (ahead (last To) steps:7 #1))))
                                (if (not (or (is Empty (ahead (last To) steps:8 #1)) (= (last To) (ahead (last To) steps:8 #1))))
                                    ("PushAMarble" 8 #1)  // There can never be more than 8 connected, colinear marbles.
                                    (and {
                                        // (note "There are seven connected marble push the last one")
                                        ("PushAMarble" 7 #1)
                                    })
                                )
                                (and {
                                    // (note "There are six connected marble push the last one")
                                    ("PushAMarble" 6 #1)
                                })
                            )
                            (and {
                                // (note "There are five connected marble push the last one")
                                ("PushAMarble" 5 #1)
                            })
                        )
                        (and {
                            // (note "There are four connected marble push the last one")
                            ("PushAMarble" 4 #1)
                        })
                    )
                    (and {
                        // (note "There are three connected marble push the last one")
                        ("PushAMarble" 3 #1)
                    })
                )
                (and {
                    // (note "There are two connected marble push the last one")
                    ("PushAMarble" 2 #1)
                })
            )
            (and {
                // (note "There is one adjacent marble to push")
                ("PushAMarble" 1 #1)
            })
        )
        // else (note "There are no adjacent marbles to push, do nothing")
    )
)

// ***********************************************

(game "Momentum" 
    (players <Board:pcnt>) 
    (equipment { 
        (board (<Board:type>)) 
        (piece "Ball" Each) 
        // (piece "Ball" Neutral)
    }) 

    (rules 
        (meta (swap))  // Pie Rule is enabled.
        (start {
            (set Score Each 0)
        })

        (play 
            (move Add
                (piece (id "Ball" Mover))
                (to (sites Empty)) 
                (then
                    (and { 
                        // Score the added marble, add 1 to mover's score
                        (addScore Mover 1)
                        // Exhibit momentum in all eight compass directions,
                        // adjust scores for marbles that fall off the board as needed.
                        ("FindLastMarbleAndPushIt" N)
                        ("FindLastMarbleAndPushIt" NE)
                        ("FindLastMarbleAndPushIt" E)
                        ("FindLastMarbleAndPushIt" SE)
                        ("FindLastMarbleAndPushIt" S)
                        ("FindLastMarbleAndPushIt" SW)
                        ("FindLastMarbleAndPushIt" W)
                        ("FindLastMarbleAndPushIt" NW)
                        (if (= (count Pieces Mover) (- <Board:goal> 1))
                            (note "Opponent is one move away from a win")
                        )
                     } )
                ) 
            )
        ) 

        (end (if (= (score Mover) <Board:goal>) (byScore)))
    )
)

// *****************************************************

(option "Board Setup" <Board> args:{ <type> <pcnt> <goal> <adjP3score> <centreEdges> } 
    {
    (item "7x7 2p**" <square 7>       
                   <2>   
                   <8>  
                   <> 
                   <> 
                   "Board dimensions 7x7, 2 players, goal is 8.")**
    (item "7x9 2p" <rectangle 7 9>  
                   <2>   
                   <10>  
                   <> 
                   <>  
                   "Board dimensions 7x9, 2 players, goal is 9.")
    (item "9x9 2p" <remove (square 9) cells:{40}>       
                   <2>  
                   <12>  
                   <> 
                   <(region Colour Edge {80 89 90 99} regionSiteType:Edge (colour Grey))>  
                   "Board dimensions 9x9 centre hole, 2 players, goal is 12.")
    (item "7x7 3p*" <square 7>       
                   <3>    
                   <6>  
                   <(if (= 3 (who at:((ahead (last To) steps:#1 #2))) ) (addScore P3 -1) )>
                   <>  
                   "Board dimensions 7x7, 3 players, goal is 6.")*
    (item "7x9 3p" <rectangle 7 9>  
                   <3>   
                   <7>  
                   <(if (= 3 (who at:((ahead (last To) steps:#1 #2))) ) (addScore P3 -1) )> 
                   <>  
                   "Board dimensions 7x9, 3 players, goal is 7.")
    (item "9x9 3p" <remove (square 9) cells:{40}>       
                   <3>    
                   <8>  
                   <(if (= 3 (who at:((ahead (last To) steps:#1 #2))) ) (addScore P3 -1) )>
                   <(region Colour Edge {80 89 90 99} regionSiteType:Edge (colour Grey))>  
                   "Board dimensions 9x9 centre hole, 3 players, goal is 8.")
    }
)

(metadata 
    
    (info
        {
        (description "Momentum is a tactical abstract board game for two players in which the lead swings back and forth like the spheres of Newtonâ€™s cradle. The mechanics of the game simulate the game of marbles. Momentum is normally played on a 7 x 7 game board but can be played on game boards of various sizes and shapes and with more players.")
        (rules "Players take turns dropping one of their marbles onto the game board. The momentum of the dropped marble is transferred in up to eight directions through adjacent contiguous lines of marbles. The last marble at the end of each of these lines is pushed away one cell from the dropped marble. Some morbles may fall off the board. 

The first player to have a predetermined number (8 is standard game) of his or her marbles on the board at the end of his or her turn wins the game. Options for different boards and player counts are selectable and can be viewed on the Rules tab.")
        (source "<a href=\"https://boardgamegeek.com/boardgame/73091/momentum\" target=\"_blank\" class=\"style1\" style=\"color: #0000EE\" />BGG</a>")
        (version "1.3.13")
        (classification "board/race/score")
        (credit "Phil Leduc")
        (author "Phil Leduc")
        (date "07-28-2002")
        }
    )

    (graphics {
        (piece Scale "Ball" 0.75)
        (board Colour Phase0 (colour Cream))
        (board Colour InnerEdges (colour Grey))
        (board Colour OuterEdges (colour Grey))
        (board StyleThickness InnerEdges 0.5)
        (board StyleThickness OuterEdges 2.0)
        (player Colour P1 (colour Red))
        (player Colour P2 (colour Blue))
        (player Colour P3 (colour White))
        (piece Colour P1 "Ball" strokeColour:(colour LightRed))
        (piece Colour P2 "Ball" strokeColour:(colour LightBlue))
        (piece Colour P3 "Ball" strokeColour:(colour White))
        // If playing on a 9x9 board, put a hole at its center.
        // (region Colour Edge {80 89 90 99} regionSiteType:Edge (colour Grey))
        <Board:centreEdges>

    })

    // (ai 
    //     "Momentum_ai"
    // )
    
)
